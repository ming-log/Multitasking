程序运行起来才是进程
进程可以由操作系统调度分配得到资源,复制主进程的资源

1. 进程
程序: 例如xxx.py这是程序，是一个静态的
进程: 一个程序运行起来后，代码+用到的资源称之为进程，它是操作系统分配资源的基本单元
不仅可以通过线程完成多任务，进程也是可以的

2. 进程的状态
工作中，任务数往往大于cpu的核数，即一定有一些任务正在执行，而另外一些任务等待cpu进行执行，
因此导致有了不同的状态
 * 就绪态:运行的条件都已经慢去，正在等待cpu执行
 * 执行态:cpu正在执行其功能
 * 等待态(堵塞):等待某些条件满足，例如一个程序sleep了，此时就处于等待态

写时拷贝

进程与线程对比
1. 功能:
进程:能够完成多任务，比如在一台电脑上运行多个QQ
线程:能够完成多任务，比如在一个QQ中的多个聊天窗口

进程只是一个资源分配单位，分配资源后还是线程进行执行
一个进程中至少有一个线程

线程不能够独立执行，必须依存在进程中
可以将进程理解为工厂中的一条流水线，而其中的线程就是这个流水线的工人

优缺点:
线程和进程在使用上各有优缺点:线程执行开销小，但不利于资源的管理和保护;而进程相反。
